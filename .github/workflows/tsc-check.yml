name: TypeScript Build Check

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  pull-requests: write

jobs:
  tsc-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache yarn dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run TypeScript compiler
        id: tsc
        run: |
          # tsc 실행 결과를 파일로 저장
          yarn tsc -b > tsc_output.txt 2>&1 || true

          # 에러가 있는지 확인
          if grep -q "error" tsc_output.txt; then
            echo "TSC_HAS_ERRORS=true" >> $GITHUB_ENV
          else
            echo "TSC_HAS_ERRORS=false" >> $GITHUB_ENV
          fi

          # 결과를 GitHub Actions 환경 파일로 저장
          echo "TSC_OUTPUT<<EOF" >> $GITHUB_ENV
          cat tsc_output.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          # tsc_output.txt 파일 삭제
          cat tsc_output.txt
          rm tsc_output.txt

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = process.env.TSC_OUTPUT;
            const hasErrors = process.env.TSC_HAS_ERRORS === 'true';

            let comment = '## TypeScript Build Results\n\n';
            if (hasErrors) {
              comment += '❌ 에러가 발생했습니다. 자세한 내용은 아래를 참조하세요:\n\n';
              comment += '```\n' + output + '\n```';
              comment += '\n[자세한 로그 보기](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})';
            } else {
              comment += '✅ TSC 빌드에 문제가 없습니다';
            }

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });
